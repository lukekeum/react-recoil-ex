{"version":3,"sources":["pages/Main.tsx","atom/number.ts","components/Number/Title.tsx","components/Number/Input.tsx","components/Number/index.tsx","pages/Number.tsx","atom/todo.ts","components/Todo/Input.tsx","components/Todo/Item.tsx","components/Todo/Content.tsx","components/Todo/Main.tsx","components/Todo/index.tsx","pages/Todo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Main","to","NumberData","atom","key","default","current_num","increase_size","Title","useRecoilState","number","css","TitleCSS","Input","setNumber","InputRef","useRef","onChangeInput","useCallback","e","value","parseInt","currentTarget","onClickButton","preventDefault","current","alert","NumberInput","type","placeholder","onChange","ref","NumberButton","onClick","NumberComponent","NumberComponentCss","Number","TodoData","useState","inputValue","setInputValue","setTodoList","useSetRecoilState","curr","id","length","content","isFinished","onInputChange","Container","InputStyle","ButtonStyle","TodoItem","text","checked","todoList","ToggleEvent","newList","map","todo","RemoveTodo","stopPropagation","filter","className","TextBox","Content","useRecoilValue","todoItem","MainContainer","TodoHeader","Todo","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d35aefe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Main() {\r\n  return <Link to='/number'>Goto Number</Link>;\r\n}\r\n","import { atom } from 'recoil';\r\n\r\nexport const NumberData = atom({\r\n  key: 'number',\r\n  default: {\r\n    current_num: 0,\r\n    increase_size: 1,\r\n  },\r\n});\r\n","import { useRecoilState } from 'recoil';\r\nimport { css } from '@emotion/react';\r\nimport { NumberData } from '../../atom/number';\r\n\r\nexport default function Title() {\r\n  const [number] = useRecoilState(NumberData);\r\n\r\n  return <h1 css={TitleCSS}>{number.current_num}</h1>;\r\n}\r\n\r\nconst TitleCSS = css({\r\n  fontSize: '3rem',\r\n});\r\n","import React, { useCallback, useRef } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { NumberData } from '../../atom/number';\r\n\r\nexport default function Input() {\r\n  const [number, setNumber] = useRecoilState(NumberData);\r\n  const InputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onChangeInput = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = parseInt(e.currentTarget.value, 10);\r\n\r\n      setNumber({\r\n        ...number,\r\n        increase_size: value,\r\n      });\r\n    },\r\n    [number, setNumber]\r\n  );\r\n\r\n  const onClickButton = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n\r\n      if (!InputRef.current?.value) {\r\n        alert('Non number found');\r\n        return;\r\n      }\r\n\r\n      const { current_num, increase_size } = number;\r\n\r\n      setNumber({\r\n        ...number,\r\n        current_num: current_num + increase_size,\r\n      });\r\n    },\r\n    [number, setNumber]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        css={NumberInput}\r\n        type='number'\r\n        placeholder='Put number here'\r\n        value={number.increase_size}\r\n        onChange={onChangeInput}\r\n        ref={InputRef}\r\n      />\r\n      <button css={NumberButton} onClick={onClickButton}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NumberInput = css({\r\n  outline: 'none',\r\n  border: '1px solid #bfbfbf',\r\n  fontSize: '1.5rem',\r\n  padding: '0.5rem 1rem',\r\n  borderRadius: '3px',\r\n  marginRight: '1.5rem',\r\n});\r\n\r\nconst NumberButton = css({\r\n  outline: 'none',\r\n  border: 'none',\r\n  fontSize: '1.5rem',\r\n  background: '#14b886',\r\n  cursor: 'pointer',\r\n  color: 'white',\r\n  padding: '0.5rem 1rem',\r\n  borderRadius: '3px',\r\n});\r\n","import { css } from '@emotion/react';\r\n\r\nimport Title from './Title';\r\nimport Input from './Input';\r\n\r\nexport default function NumberComponent() {\r\n  return (\r\n    <div css={NumberComponentCss}>\r\n      <Title />\r\n      <Input />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NumberComponentCss = css({\r\n  height: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n});\r\n","import NumberComponent from '../components/Number';\r\n\r\nexport default function Number() {\r\n  return <NumberComponent></NumberComponent>;\r\n}\r\n","import { atom } from 'recoil';\r\n\r\ninterface ITodoData {\r\n  id: number;\r\n  content: string;\r\n  isFinished: boolean;\r\n}\r\n\r\nexport const TodoData = atom<ITodoData[]>({\r\n  key: 'todo',\r\n  default: [],\r\n});\r\n","import React, { useCallback, useState } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { TodoData } from '../../atom/todo';\r\n\r\nexport default function Input() {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const setTodoList = useSetRecoilState(TodoData);\r\n\r\n  const onClickButton = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n      setTodoList((curr) => {\r\n        const id = curr.length + 1;\r\n        return [\r\n          ...curr,\r\n          {\r\n            id,\r\n            content: inputValue,\r\n            isFinished: false,\r\n          },\r\n        ];\r\n      });\r\n    },\r\n    [setTodoList, inputValue]\r\n  );\r\n\r\n  const onInputChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setInputValue(e.currentTarget.value);\r\n    },\r\n    [setInputValue]\r\n  );\r\n\r\n  return (\r\n    <div css={Container}>\r\n      <input\r\n        css={InputStyle}\r\n        type='text'\r\n        placeholder='Write what to do'\r\n        value={inputValue}\r\n        onChange={onInputChange}\r\n      />\r\n      <button css={ButtonStyle} onClick={onClickButton}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Container = css`\r\n  display: flex;\r\n`;\r\n\r\nconst ButtonStyle = css`\r\n  margin: 0;\r\n  outline: none;\r\n  border: none;\r\n  width: 5rem;\r\n  height: 5rem;\r\n  font-size: 3rem;\r\n  color: white;\r\n  background: #3b3b3b;\r\n  padding: 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst InputStyle = css`\r\n  margin: 0;\r\n  outline: none;\r\n  border: none;\r\n  width: 27rem;\r\n  height: 5rem;\r\n  font-size: 1.5rem;\r\n  padding: 0rem 1.5rem;\r\n`;\r\n","import React, { useCallback } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { TodoData } from '../../atom/todo';\r\n\r\ninterface ITodoItemProps {\r\n  text: string;\r\n  checked: boolean;\r\n  id: number;\r\n}\r\n\r\nexport default function TodoItem({ text, checked, id }: ITodoItemProps) {\r\n  const [todoList, setTodoList] = useRecoilState(TodoData);\r\n\r\n  const ToggleEvent = useCallback(\r\n    (e: React.MouseEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      const newList = todoList.map((todo) =>\r\n        todo.id === id ? { ...todo, isFinished: !checked } : todo\r\n      );\r\n      setTodoList(newList);\r\n    },\r\n    [todoList, setTodoList, checked, id]\r\n  );\r\n\r\n  const RemoveTodo = useCallback(\r\n    (e: React.MouseEvent<HTMLDivElement>) => {\r\n      e.stopPropagation();\r\n      const newList = todoList.filter((todo) => todo.id !== id);\r\n      setTodoList(newList);\r\n    },\r\n    [setTodoList, todoList, id]\r\n  );\r\n\r\n  return (\r\n    <div css={Container} onClick={ToggleEvent}>\r\n      <div className='remove' onClick={RemoveTodo}>\r\n        &times;\r\n      </div>\r\n      <div css={TextBox(checked)}>\r\n        <div>{text}</div>\r\n      </div>\r\n      {checked && <div css={{ color: '#7ff562', fontSize: '1.25rem' }}>✓</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TextBox = (checked: boolean) => css`\r\n  flex: 1;\r\n  word-break: break-all;\r\n  ${checked && 'text-decoration: line-through;'}\r\n  font-size: 1.5rem;\r\n  font-weight: 100;\r\n`;\r\n\r\nconst Container = css`\r\n  padding: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  transition: all 0.15s;\r\n  user-select: none;\r\n  color: white;\r\n  &:hover {\r\n    background: #6e6e6e;\r\n  }\r\n  &:hover .remove {\r\n    opacity: 1;\r\n  }\r\n  & .remove {\r\n    opacity: 0;\r\n    margin-right: 1rem;\r\n    color: #e64980;\r\n    font-weight: 600;\r\n    font-size: 2rem;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid #949494;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { css } from '@emotion/react';\r\n\r\nimport TodoItem from './Item';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { TodoData } from '../../atom/todo';\r\n\r\nexport default function Content() {\r\n  const todoList = useRecoilValue(TodoData);\r\n  return (\r\n    <div css={Container}>\r\n      {todoList.map((todoItem) => (\r\n        <TodoItem\r\n          key={todoItem.id}\r\n          text={todoItem.content}\r\n          checked={todoItem.isFinished}\r\n          id={todoItem.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Container = css`\r\n  width: 100%;\r\n  min-height: 30rem;\r\n  background: #5c5c5c;\r\n`;\r\n","import React from 'react';\r\nimport { css } from '@emotion/react';\r\n\r\nimport Input from './Input';\r\nimport Content from './Content';\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div css={MainContainer}>\r\n      <header css={TodoHeader}>TodoList</header>\r\n      <div>\r\n        <Input />\r\n        <Content />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TodoHeader = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 35rem;\r\n  height: 10rem;\r\n  color: white;\r\n  background: #2675a3;\r\n  font-size: 3.5rem;\r\n  font-weight: 100;\r\n`;\r\n\r\nconst MainContainer = css`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  background: #f0f0fe;\r\n`;\r\n","import React from 'react';\r\nimport Main from './Main';\r\n\r\nexport default function Todo() {\r\n  return <Main />;\r\n}\r\n","import TodoComponent from '../components/Todo';\r\n\r\nexport default function Todo() {\r\n  return <TodoComponent />;\r\n}\r\n","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport Main from './pages/Main';\n\nimport Number from './pages/Number';\nimport Todo from './pages/Todo';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path='/' component={Main} />\n        <Route exact path='/number' component={Number} />\n        <Route exact path='/todo' component={Todo} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}