{"version":3,"sources":["atom/number.ts","components/Number/Title.tsx","components/Number/Input.tsx","components/Number/index.tsx","pages/Number.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NumberData","atom","key","default","current_num","increase_size","Title","useRecoilState","number","Input","setNumber","onChangeInput","useCallback","e","value","parseInt","currentTarget","onClickButton","preventDefault","css","NumberInput","type","placeholder","onChange","onClick","NumberComponent","NumberComponentCss","Number","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEaA,EAAaC,YAAK,CAC7BC,IAAK,SACLC,QAAS,CACPC,YAAa,EACbC,cAAe,K,OCHJ,SAASC,IAAS,IAAD,EACbC,YAAeP,GAAzBQ,EADuB,oBAG9B,OAAO,iCAAaA,EAAOJ,a,WCDd,SAASK,IAAS,IAAD,EACFF,YAAeP,GADb,mBACvBQ,EADuB,KACfE,EADe,KAGxBC,EAAgBC,uBACpB,SAACC,GACC,IAAMC,EAAQC,SAASF,EAAEG,cAAcF,MAAO,IAE9CJ,EAAU,2BACLF,GADI,IAEPH,cAAeS,OAGnB,CAACN,EAAQE,IAGLO,EAAgBL,uBACpB,SAACC,GACCA,EAAEK,iBADwC,IAGlCd,EAA+BI,EAA/BJ,YAAaC,EAAkBG,EAAlBH,cAErBK,EAAU,2BACLF,GADI,IAEPJ,YAAaA,EAAcC,OAG/B,CAACG,EAAQE,IAGX,OACE,uBACE,qBACES,IAAKC,EACLC,KAAK,SACLC,YAAY,kBACZR,MAAON,EAAOH,cACdkB,SAAUZ,IAEZ,sBAAQa,QAASP,GAAjB,QAKN,IAAMG,EAAW,uCC3CF,SAASK,IACtB,OACE,mBAAKN,IAAKO,GACR,YAACpB,EAAD,MACA,YAACG,EAAD,OAKN,IAAMiB,EAAkB,oHCZT,SAASC,IACtB,OAAO,YAACF,EAAD,MCWMG,MAVf,WACE,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWJ,OCMhCK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,YAAC,IAAMC,WAAP,KACE,YAAC,IAAD,KACE,YAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29d7a532.chunk.js","sourcesContent":["import { atom } from 'recoil';\r\n\r\nexport const NumberData = atom({\r\n  key: 'number',\r\n  default: {\r\n    current_num: 0,\r\n    increase_size: 1,\r\n  },\r\n});\r\n","import { useRecoilState } from 'recoil';\r\nimport { NumberData } from '../../atom/number';\r\n\r\nexport default function Title() {\r\n  const [number] = useRecoilState(NumberData);\r\n\r\n  return <h1>Number: {number.current_num}</h1>;\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { NumberData } from '../../atom/number';\r\n\r\nexport default function Input() {\r\n  const [number, setNumber] = useRecoilState(NumberData);\r\n\r\n  const onChangeInput = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = parseInt(e.currentTarget.value, 10);\r\n\r\n      setNumber({\r\n        ...number,\r\n        increase_size: value,\r\n      });\r\n    },\r\n    [number, setNumber]\r\n  );\r\n\r\n  const onClickButton = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n\r\n      const { current_num, increase_size } = number;\r\n\r\n      setNumber({\r\n        ...number,\r\n        current_num: current_num + increase_size,\r\n      });\r\n    },\r\n    [number, setNumber]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        css={NumberInput}\r\n        type='number'\r\n        placeholder='Put number here'\r\n        value={number.increase_size}\r\n        onChange={onChangeInput}\r\n      />\r\n      <button onClick={onClickButton}>Add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NumberInput = css({\r\n  outline: 'none',\r\n});\r\n","import { css } from '@emotion/react';\r\n\r\nimport Title from './Title';\r\nimport Input from './Input';\r\n\r\nexport default function NumberComponent() {\r\n  return (\r\n    <div css={NumberComponentCss}>\r\n      <Title />\r\n      <Input />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NumberComponentCss = css({\r\n  height: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n});\r\n","import NumberComponent from '../components/Number';\r\n\r\nexport default function Number() {\r\n  return <NumberComponent></NumberComponent>;\r\n}\r\n","import { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Number from './pages/Number';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path='/number' component={Number} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}