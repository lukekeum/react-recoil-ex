{"version":3,"sources":["pages/Main.tsx","atom/number.ts","components/Number/Title.tsx","components/Number/Input.tsx","components/Number/index.tsx","pages/Number.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Main","to","NumberData","atom","key","default","current_num","increase_size","Title","useRecoilState","number","css","TitleCSS","Input","setNumber","InputRef","useRef","onChangeInput","useCallback","e","value","parseInt","currentTarget","onClickButton","preventDefault","current","alert","NumberInput","type","placeholder","onChange","ref","NumberButton","onClick","NumberComponent","NumberComponentCss","Number","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAGe,SAASA,IACtB,OAAO,YAAC,IAAD,CAAMC,GAAG,WAAT,e,mBCFIC,EAAaC,YAAK,CAC7BC,IAAK,SACLC,QAAS,CACPC,YAAa,EACbC,cAAe,KCFJ,SAASC,IAAS,IAAD,EACbC,YAAeP,GAAzBQ,EADuB,oBAG9B,OAAO,kBAAIC,IAAKC,GAAWF,EAAOJ,aAGpC,IAAMM,EAAQ,wC,OCLC,SAASC,IAAS,IAAD,EACFJ,YAAeP,GADb,mBACvBQ,EADuB,KACfI,EADe,KAExBC,EAAWC,iBAAyB,MAEpCC,EAAgBC,uBACpB,SAACC,GACC,IAAMC,EAAQC,SAASF,EAAEG,cAAcF,MAAO,IAE9CN,EAAU,2BACLJ,GADI,IAEPH,cAAea,OAGnB,CAACV,EAAQI,IAGLS,EAAgBL,uBACpB,SAACC,GAA4C,IAAD,EAG1C,GAFAA,EAAEK,iBAEE,UAACT,EAASU,eAAV,aAAC,EAAkBL,MAAvB,CAH0C,IAQlCd,EAA+BI,EAA/BJ,YAAaC,EAAkBG,EAAlBH,cAErBO,EAAU,2BACLJ,GADI,IAEPJ,YAAaA,EAAcC,UAR3BmB,MAAM,sBAWV,CAAChB,EAAQI,IAGX,OACE,uBACE,qBACEH,IAAKgB,EACLC,KAAK,SACLC,YAAY,kBACZT,MAAOV,EAAOH,cACduB,SAAUb,EACVc,IAAKhB,IAEP,sBAAQJ,IAAKqB,EAAcC,QAASV,GAApC,QAON,IAAMI,EAAW,2IASXK,EAAY,wJC7DH,SAASE,IACtB,OACE,mBAAKvB,IAAKwB,GACR,YAAC3B,EAAD,MACA,YAACK,EAAD,OAKN,IAAMsB,EAAkB,oHCZT,SAASC,IACtB,OAAO,YAACF,EAAD,MCaMG,MAXf,WACE,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IACjC,YAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,UAAUC,UAAWJ,OCIhCK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,YAAC,IAAMC,WAAP,KACE,YAAC,IAAD,KACE,YAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7399d435.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Main() {\r\n  return <Link to='/number'>Goto Number</Link>;\r\n}\r\n","import { atom } from 'recoil';\r\n\r\nexport const NumberData = atom({\r\n  key: 'number',\r\n  default: {\r\n    current_num: 0,\r\n    increase_size: 1,\r\n  },\r\n});\r\n","import { useRecoilState } from 'recoil';\r\nimport { css } from '@emotion/react';\r\nimport { NumberData } from '../../atom/number';\r\n\r\nexport default function Title() {\r\n  const [number] = useRecoilState(NumberData);\r\n\r\n  return <h1 css={TitleCSS}>{number.current_num}</h1>;\r\n}\r\n\r\nconst TitleCSS = css({\r\n  fontSize: '3rem',\r\n});\r\n","import React, { useCallback, useRef } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { NumberData } from '../../atom/number';\r\n\r\nexport default function Input() {\r\n  const [number, setNumber] = useRecoilState(NumberData);\r\n  const InputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onChangeInput = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = parseInt(e.currentTarget.value, 10);\r\n\r\n      setNumber({\r\n        ...number,\r\n        increase_size: value,\r\n      });\r\n    },\r\n    [number, setNumber]\r\n  );\r\n\r\n  const onClickButton = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n\r\n      if (!InputRef.current?.value) {\r\n        alert('Non number found');\r\n        return;\r\n      }\r\n\r\n      const { current_num, increase_size } = number;\r\n\r\n      setNumber({\r\n        ...number,\r\n        current_num: current_num + increase_size,\r\n      });\r\n    },\r\n    [number, setNumber]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        css={NumberInput}\r\n        type='number'\r\n        placeholder='Put number here'\r\n        value={number.increase_size}\r\n        onChange={onChangeInput}\r\n        ref={InputRef}\r\n      />\r\n      <button css={NumberButton} onClick={onClickButton}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NumberInput = css({\r\n  outline: 'none',\r\n  border: '1px solid #bfbfbf',\r\n  fontSize: '1.5rem',\r\n  padding: '0.5rem 1rem',\r\n  borderRadius: '3px',\r\n  marginRight: '1.5rem',\r\n});\r\n\r\nconst NumberButton = css({\r\n  outline: 'none',\r\n  border: 'none',\r\n  fontSize: '1.5rem',\r\n  background: '#14b886',\r\n  cursor: 'pointer',\r\n  color: 'white',\r\n  padding: '0.5rem 1rem',\r\n  borderRadius: '3px',\r\n});\r\n","import { css } from '@emotion/react';\r\n\r\nimport Title from './Title';\r\nimport Input from './Input';\r\n\r\nexport default function NumberComponent() {\r\n  return (\r\n    <div css={NumberComponentCss}>\r\n      <Title />\r\n      <Input />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NumberComponentCss = css({\r\n  height: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n});\r\n","import NumberComponent from '../components/Number';\r\n\r\nexport default function Number() {\r\n  return <NumberComponent></NumberComponent>;\r\n}\r\n","import { HashRouter, Route, Switch } from 'react-router-dom';\nimport Main from './pages/Main';\n\nimport Number from './pages/Number';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path='/' component={Main} />\n        <Route exact path='/number' component={Number} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}